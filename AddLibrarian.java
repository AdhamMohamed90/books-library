/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package library;

import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.DriverManager;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author DELL
 */
public class AddLibrarian extends javax.swing.JFrame {

    /**
     * Creates new form AddLibrarian
     */
    public AddLibrarian() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add Librarian");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(280, 20, 180, 40);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Name :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(100, 90, 63, 22);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("password :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(100, 150, 97, 22);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Email :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(100, 210, 70, 22);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Address :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(100, 270, 85, 22);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("City :");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(100, 330, 47, 22);

        jButton3.setBackground(new java.awt.Color(153, 102, 0));
        jButton3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Clear");
        jButton3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(350, 540, 80, 30);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Contact No :");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(100, 390, 120, 22);

        jTextField1.setBackground(new java.awt.Color(153, 102, 0));
        jTextField1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(220, 90, 370, 30);

        jToggleButton1.setBackground(new java.awt.Color(153, 102, 0));
        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/eye2.png"))); // NOI18N
        jToggleButton1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jToggleButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton1MouseClicked(evt);
            }
        });
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jToggleButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jToggleButton1KeyPressed(evt);
            }
        });
        getContentPane().add(jToggleButton1);
        jToggleButton1.setBounds(600, 150, 50, 30);

        jPasswordField1.setBackground(new java.awt.Color(153, 102, 0));
        jPasswordField1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPasswordField1.setForeground(new java.awt.Color(255, 255, 255));
        jPasswordField1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
        });
        getContentPane().add(jPasswordField1);
        jPasswordField1.setBounds(220, 150, 370, 30);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/contact.png"))); // NOI18N
        getContentPane().add(jLabel9);
        jLabel9.setBounds(40, 380, 40, 40);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/password.png"))); // NOI18N
        getContentPane().add(jLabel10);
        jLabel10.setBounds(40, 140, 40, 40);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/address.png"))); // NOI18N
        getContentPane().add(jLabel13);
        jLabel13.setBounds(40, 260, 40, 40);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/name.png"))); // NOI18N
        getContentPane().add(jLabel11);
        jLabel11.setBounds(40, 80, 40, 40);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/email.png"))); // NOI18N
        getContentPane().add(jLabel12);
        jLabel12.setBounds(40, 200, 40, 40);

        jTextField2.setBackground(new java.awt.Color(153, 102, 0));
        jTextField2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField2);
        jTextField2.setBounds(220, 390, 370, 30);

        jTextField6.setBackground(new java.awt.Color(153, 102, 0));
        jTextField6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(255, 255, 255));
        jTextField6.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField6KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField6);
        jTextField6.setBounds(220, 210, 370, 30);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/city.png"))); // NOI18N
        getContentPane().add(jLabel14);
        jLabel14.setBounds(40, 320, 40, 40);

        jTextField3.setBackground(new java.awt.Color(153, 102, 0));
        jTextField3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(255, 255, 255));
        jTextField3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField3);
        jTextField3.setBounds(220, 270, 370, 30);

        jTextField7.setBackground(new java.awt.Color(153, 102, 0));
        jTextField7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(255, 255, 255));
        jTextField7.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField7KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField7);
        jTextField7.setBounds(220, 330, 370, 30);

        jButton1.setBackground(new java.awt.Color(153, 102, 0));
        jButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/add librarian.jpg"))); // NOI18N
        jButton1.setText("Add librarian");
        jButton1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(300, 460, 190, 50);

        jButton2.setBackground(new java.awt.Color(153, 102, 0));
        jButton2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("→");
        jButton2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(670, 0, 50, 30);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/AddLibrarian2.png"))); // NOI18N
        getContentPane().add(jLabel8);
        jLabel8.setBounds(0, 0, 720, 600);

        setSize(new java.awt.Dimension(731, 621));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new AdminSection().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String name = jTextField1.getText().trim();
        char[] pass = jPasswordField1.getPassword();
        String parse = String.valueOf(pass);
        String email = jTextField6.getText().trim();
        String address = jTextField3.getText().trim();
        String city = jTextField7.getText().trim();
        String num = jTextField2.getText().trim();
        if (name.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (name.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (parse.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password must contain more than 7 characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The email must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Email must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Email must contain @ character","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The city name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The city name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[a-zA-Z]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any letters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.length() != 11) {
            JOptionPane.showMessageDialog(null, "The number must be 11 numbers","Invalid",0,  new ImageIcon("R.png"));
        } else {
            try {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                
                Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");
                
                String sql = "insert into librarian (id,name , password,email,address,city,num) values (seq.nextval,?,?,?,?,?,?) ";
                PreparedStatement s = c.prepareStatement(sql);
                s.setString(1, name);
                s.setString(2, parse);
                s.setString(3, email);
                s.setString(4, address);
                s.setString(5, city);
                s.setString(6, num);
                s.executeQuery();
                JOptionPane.showMessageDialog(null, "Librarian added succefully","succses",0, new ImageIcon("OIP_2.png"));

            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"invalid",0,new ImageIcon("R.png"));
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jPasswordField1.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        if(jToggleButton1.isSelected()){
            jToggleButton1.setIcon(new ImageIcon("eye1.png"));
            jPasswordField1.setEchoChar((char)0);
        }else{
            jToggleButton1.setIcon(new ImageIcon("eye2.png"));
            jPasswordField1.setEchoChar('*');
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jToggleButton1MouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String name = jTextField1.getText().trim();
        char[] pass = jPasswordField1.getPassword();
        String parse = String.valueOf(pass);
        String email = jTextField6.getText().trim();
        String address = jTextField3.getText().trim();
        String city = jTextField7.getText().trim();
        String num = jTextField2.getText().trim();
        
        if(name.length() < 2){
            JOptionPane.showMessageDialog(null, "The name must contain more than 2 characters","Invalid",0,  new ImageIcon("R.png"));
        }else if (name.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (name.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (parse.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password must contain more than 7 characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The email must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Email must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Email must contain @ character","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The city name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The city name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[a-zA-Z]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any letters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.length() != 11) {
            JOptionPane.showMessageDialog(null, "The number must be 11 numbers","Invalid",0,  new ImageIcon("R.png"));
        } else {
            try {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                
                Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");
                
                String sql = "insert into librarian (id,name , password,email,address,city,num) values (seq.nextval,?,?,?,?,?,?) ";
                PreparedStatement s = c.prepareStatement(sql);
                s.setString(1, name);
                s.setString(2, parse);
                s.setString(3, email);
                s.setString(4, address);
                s.setString(5, city);
                s.setString(6, num);
                s.executeQuery();
                JOptionPane.showMessageDialog(null, "Librarian added succefully","success",0,new ImageIcon("OIP_2.png"));

            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"invalid",0,new ImageIcon("R.png"));
            }
        }
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String name = jTextField1.getText().trim();
        char[] pass = jPasswordField1.getPassword();
        String parse = String.valueOf(pass);
        String email = jTextField6.getText().trim();
        String address = jTextField3.getText().trim();
        String city = jTextField7.getText().trim();
        String num = jTextField2.getText().trim();
        
        if(name.length() < 2){
            JOptionPane.showMessageDialog(null, "The name must contain more than 2 characters","Invalid",0,  new ImageIcon("R.png"));
        }else if (name.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (name.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (parse.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password must contain more than 7 characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The email must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Email must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Email must contain @ character","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The city name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The city name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[a-zA-Z]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any letters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.length() != 11) {
            JOptionPane.showMessageDialog(null, "The number must be 11 numbers","Invalid",0,  new ImageIcon("R.png"));
        } else {
            try {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                
                Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");
                
                String sql = "insert into librarian (id,name , password,email,address,city,num) values (seq.nextval,?,?,?,?,?,?) ";
                PreparedStatement s = c.prepareStatement(sql);
                s.setString(1, name);
                s.setString(2, parse);
                s.setString(3, email);
                s.setString(4, address);
                s.setString(5, city);
                s.setString(6, num);
                s.executeQuery();
                JOptionPane.showMessageDialog(null, "Librarian added succefully","succses",0, new ImageIcon("OIP_2.png"));

            }  catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"invalid",0,new ImageIcon("R.png"));
            }
        }
        }
    }//GEN-LAST:event_jPasswordField1KeyPressed

    private void jToggleButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jToggleButton1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String name = jTextField1.getText().trim();
        char[] pass = jPasswordField1.getPassword();
        String parse = String.valueOf(pass);
        String email = jTextField6.getText().trim();
        String address = jTextField3.getText().trim();
        String city = jTextField7.getText().trim();
        String num = jTextField2.getText().trim();
        
        if(name.length() < 2){
            JOptionPane.showMessageDialog(null, "The name must contain more than 2 characters","Invalid",0,  new ImageIcon("R.png"));
        }else if (name.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (name.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (parse.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password must contain more than 7 characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The email must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Email must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Email must contain @ character","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The city name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The city name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[a-zA-Z]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any letters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.length() != 11) {
            JOptionPane.showMessageDialog(null, "The number must be 11 numbers","Invalid",0,  new ImageIcon("R.png"));
        } else {
            try {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                
                Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");
                
                String sql = "insert into librarian (id,name , password,email,address,city,num) values (seq.nextval,?,?,?,?,?,?) ";
                PreparedStatement s = c.prepareStatement(sql);
                s.setString(1, name);
                s.setString(2, parse);
                s.setString(3, email);
                s.setString(4, address);
                s.setString(5, city);
                s.setString(6, num);
                s.executeQuery();
                JOptionPane.showMessageDialog(null, "Librarian added succefully","success",0,new ImageIcon("OIP_2.png"));

            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"invalid",0,new ImageIcon("R.png"));
            }
        }
        }
    }//GEN-LAST:event_jToggleButton1KeyPressed

    private void jTextField6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String name = jTextField1.getText().trim();
        char[] pass = jPasswordField1.getPassword();
        String parse = String.valueOf(pass);
        String email = jTextField6.getText().trim();
        String address = jTextField3.getText().trim();
        String city = jTextField7.getText().trim();
        String num = jTextField2.getText().trim();
        
        if(name.length() < 2){
            JOptionPane.showMessageDialog(null, "The name must contain more than 2 characters","Invalid",0,  new ImageIcon("R.png"));
        }else if (name.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (name.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (parse.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password must contain more than 7 characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The email must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Email must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Email must contain @ character","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The city name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The city name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[a-zA-Z]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any letters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.length() != 11) {
            JOptionPane.showMessageDialog(null, "The number must be 11 numbers","Invalid",0,  new ImageIcon("R.png"));
        } else {
            try {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                
                Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");
                
                String sql = "insert into librarian (id,name , password,email,address,city,num) values (seq.nextval,?,?,?,?,?,?) ";
                PreparedStatement s = c.prepareStatement(sql);
                s.setString(1, name);
                s.setString(2, parse);
                s.setString(3, email);
                s.setString(4, address);
                s.setString(5, city);
                s.setString(6, num);
                s.executeQuery();
                JOptionPane.showMessageDialog(null, "Librarian added succefully","success",0,new ImageIcon("OIP_2.png"));

            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"invalid",0,new ImageIcon("R.png"));
            }
        }
        }
    }//GEN-LAST:event_jTextField6KeyPressed

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String name = jTextField1.getText().trim();
        char[] pass = jPasswordField1.getPassword();
        String parse = String.valueOf(pass);
        String email = jTextField6.getText().trim();
        String address = jTextField3.getText().trim();
        String city = jTextField7.getText().trim();
        String num = jTextField2.getText().trim();
        
        if(name.length() < 2){
            JOptionPane.showMessageDialog(null, "The name must contain more than 2 characters","Invalid",0,  new ImageIcon("R.png"));
        }else if (name.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (name.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (parse.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password must contain more than 7 characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The email must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Email must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Email must contain @ character","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The city name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The city name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[a-zA-Z]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any letters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.length() != 11) {
            JOptionPane.showMessageDialog(null, "The number must be 11 numbers","Invalid",0,  new ImageIcon("R.png"));
        } else {
            try {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                
                Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");
                
                String sql = "insert into librarian (id,name , password,email,address,city,num) values (seq.nextval,?,?,?,?,?,?) ";
                PreparedStatement s = c.prepareStatement(sql);
                s.setString(1, name);
                s.setString(2, parse);
                s.setString(3, email);
                s.setString(4, address);
                s.setString(5, city);
                s.setString(6, num);
                s.executeQuery();
                JOptionPane.showMessageDialog(null, "Librarian added succefully","success",0,new ImageIcon("OIP_2.png"));

            }  catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"invalid",0,new ImageIcon("R.png"));
            }
        }
        }
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jTextField7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String name = jTextField1.getText().trim();
        char[] pass = jPasswordField1.getPassword();
        String parse = String.valueOf(pass);
        String email = jTextField6.getText().trim();
        String address = jTextField3.getText().trim();
        String city = jTextField7.getText().trim();
        String num = jTextField2.getText().trim();
        
        if(name.length() < 2){
            JOptionPane.showMessageDialog(null, "The name must contain more than 2 characters","Invalid",0,  new ImageIcon("R.png"));
        }else if (name.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (name.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (parse.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password must contain more than 7 characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The email must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Email must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Email must contain @ character","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The city name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The city name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[a-zA-Z]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any letters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.length() != 11) {
            JOptionPane.showMessageDialog(null, "The number must be 11 numbers","Invalid",0,  new ImageIcon("R.png"));
        } else {
            try {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                
                Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");
                
                String sql = "insert into librarian (id,name , password,email,address,city,num) values (seq.nextval,?,?,?,?,?,?) ";
                PreparedStatement s = c.prepareStatement(sql);
                s.setString(1, name);
                s.setString(2, parse);
                s.setString(3, email);
                s.setString(4, address);
                s.setString(5, city);
                s.setString(6, num);
                s.executeQuery();
                JOptionPane.showMessageDialog(null, "Librarian added succefully","success",0,new ImageIcon("OIP_2.png"));

            }  catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"invalid",0,new ImageIcon("R.png"));
            }
        }
        }
    }//GEN-LAST:event_jTextField7KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String name = jTextField1.getText().trim();
        char[] pass = jPasswordField1.getPassword();
        String parse = String.valueOf(pass);
        String email = jTextField6.getText().trim();
        String address = jTextField3.getText().trim();
        String city = jTextField7.getText().trim();
        String num = jTextField2.getText().trim();
        
        if(name.length() < 2){
            JOptionPane.showMessageDialog(null, "The name must contain more than 2 characters","Invalid",0,  new ImageIcon("R.png"));
        }else if (name.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (name.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (parse.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password must contain more than 7 characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The email must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Email must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Email must contain @ character","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The city name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The city name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[a-zA-Z]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any letters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.length() != 11) {
            JOptionPane.showMessageDialog(null, "The number must be 11 numbers","Invalid",0,  new ImageIcon("R.png"));
        } else {
            try {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                
                Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");
                
                String sql = "insert into librarian (id,name , password,email,address,city,num) values (seq.nextval,?,?,?,?,?,?) ";
                PreparedStatement s = c.prepareStatement(sql);
                s.setString(1, name);
                s.setString(2, parse);
                s.setString(3, email);
                s.setString(4, address);
                s.setString(5, city);
                s.setString(6, num);
                s.executeQuery();
                JOptionPane.showMessageDialog(null, "Librarian added succefully","success",0,new ImageIcon("OIP_2.png"));

            }  catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"invalid",0,new ImageIcon("R.png"));
            }
        }
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String name = jTextField1.getText().trim();
        char[] pass = jPasswordField1.getPassword();
        String parse = String.valueOf(pass);
        String email = jTextField6.getText().trim();
        String address = jTextField3.getText().trim();
        String city = jTextField7.getText().trim();
        String num = jTextField2.getText().trim();
        
        if(name.length() < 2){
            JOptionPane.showMessageDialog(null, "The name must contain more than 2 characters","Invalid",0,  new ImageIcon("R.png"));
        }else if (name.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (name.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (parse.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password must contain more than 7 characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The email must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Email must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Email must contain @ character","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The city name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The city name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[a-zA-Z]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any letters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.length() != 11) {
            JOptionPane.showMessageDialog(null, "The number must be 11 numbers","Invalid",0,  new ImageIcon("R.png"));
        } else {
            try {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                
                Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");
                
                String sql = "insert into librarian (id,name , password,email,address,city,num) values (seq.nextval,?,?,?,?,?,?) ";
                PreparedStatement s = c.prepareStatement(sql);
                s.setString(1, name);
                s.setString(2, parse);
                s.setString(3, email);
                s.setString(4, address);
                s.setString(5, city);
                s.setString(6, num);
                s.executeQuery();
                JOptionPane.showMessageDialog(null, "Librarian added succefully","success",0,new ImageIcon("OIP_2.png"));

            }  catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"invalid",0,new ImageIcon("R.png"));
            }
        }
        }
    }//GEN-LAST:event_jButton3KeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String name = jTextField1.getText().trim();
        char[] pass = jPasswordField1.getPassword();
        String parse = String.valueOf(pass);
        String email = jTextField6.getText().trim();
        String address = jTextField3.getText().trim();
        String city = jTextField7.getText().trim();
        String num = jTextField2.getText().trim();
        
        if(name.length() < 2){
            JOptionPane.showMessageDialog(null, "The name must contain more than 2 characters","Invalid",0,  new ImageIcon("R.png"));
        }else if (name.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (name.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (parse.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password must contain more than 7 characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The email must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (email.startsWith("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "Email must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Email must contain @ character","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[0-9]")) {
            JOptionPane.showMessageDialog(null, "The city name must not start with numbers","Invalid",0,  new ImageIcon("R.png"));
        } else if (city.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The city name must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[a-zA-Z]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any letters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.contains("[!@#$%^&*]")) {
            JOptionPane.showMessageDialog(null, "The number must not contain any special characters","Invalid",0,  new ImageIcon("R.png"));
        } else if (num.length() != 11) {
            JOptionPane.showMessageDialog(null, "The number must be 11 numbers","Invalid",0,  new ImageIcon("R.png"));
        } else {
            try {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                
                Connection c = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "123");
                
                String sql = "insert into librarian (id,name , password,email,address,city,num) values (seq.nextval,?,?,?,?,?,?) ";
                PreparedStatement s = c.prepareStatement(sql);
                s.setString(1, name);
                s.setString(2, parse);
                s.setString(3, email);
                s.setString(4, address);
                s.setString(5, city);
                s.setString(6, num);
                s.executeQuery();
                JOptionPane.showMessageDialog(null, "Librarian added succefully","success",0,new ImageIcon("OIP_2.png"));

            }  catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"invalid",0,new ImageIcon("R.png"));
            }
        }
        }
    }//GEN-LAST:event_jButton2KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddLibrarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddLibrarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddLibrarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddLibrarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddLibrarian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
